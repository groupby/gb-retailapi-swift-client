//
// SearchAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SearchAPI {

    /**
     Provided search functionality
     
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter facetSearchRequestDto: (body) Request that should be populated to configure a search API call, made by the client on behalf of a shopper. Contains original request and information about facet for which extra keys requested. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func facetSearch(xGroupbyCustomerId: String, facetSearchRequestDto: FacetSearchRequestDto, apiResponseQueue: DispatchQueue = GroupByRetailClientAPI.apiResponseQueue, completion: @escaping ((_ data: FacetSearchResponseDto?, _ error: Error?) -> Void)) -> RequestTask {
        return facetSearchWithRequestBuilder(xGroupbyCustomerId: xGroupbyCustomerId, facetSearchRequestDto: facetSearchRequestDto).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Provided search functionality
     - POST /api/search/facet
     - Perform a facet search against the GroupBy Retail Search API.
     - BASIC:
       - type: http
       - name: GroupByIncEmployee
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: ClientKey
     - responseHeaders: [Content-Type(String), Date(String), Content-Length(String), Connection(String)]
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter facetSearchRequestDto: (body) Request that should be populated to configure a search API call, made by the client on behalf of a shopper. Contains original request and information about facet for which extra keys requested. 
     - returns: RequestBuilder<FacetSearchResponseDto> 
     */
    open class func facetSearchWithRequestBuilder(xGroupbyCustomerId: String, facetSearchRequestDto: FacetSearchRequestDto) -> RequestBuilder<FacetSearchResponseDto> {
        let localVariablePath = "/api/search/facet"
        let localVariableURLString = GroupByRetailClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: facetSearchRequestDto)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "X-Groupby-Customer-Id": xGroupbyCustomerId.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<FacetSearchResponseDto>.Type = GroupByRetailClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Provided search functionality
     
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter searchRequestDto: (body) Request that should be populated to configure a search API call, made by the client on behalf of a shopper. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func search(xGroupbyCustomerId: String, searchRequestDto: SearchRequestDto, apiResponseQueue: DispatchQueue = GroupByRetailClientAPI.apiResponseQueue, completion: @escaping ((_ data: SearchResponseDto?, _ error: Error?) -> Void)) -> RequestTask {
        return searchWithRequestBuilder(xGroupbyCustomerId: xGroupbyCustomerId, searchRequestDto: searchRequestDto).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Provided search functionality
     - POST /api/search
     - Perform a search against the GroupBy Retail Search API.
     - BASIC:
       - type: http
       - name: GroupByIncEmployee
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: ClientKey
     - responseHeaders: [Content-Type(String), Date(String), Content-Length(String), Connection(String)]
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter searchRequestDto: (body) Request that should be populated to configure a search API call, made by the client on behalf of a shopper. 
     - returns: RequestBuilder<SearchResponseDto> 
     */
    open class func searchWithRequestBuilder(xGroupbyCustomerId: String, searchRequestDto: SearchRequestDto) -> RequestBuilder<SearchResponseDto> {
        let localVariablePath = "/api/search"
        let localVariableURLString = GroupByRetailClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: searchRequestDto)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "X-Groupby-Customer-Id": xGroupbyCustomerId.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SearchResponseDto>.Type = GroupByRetailClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
