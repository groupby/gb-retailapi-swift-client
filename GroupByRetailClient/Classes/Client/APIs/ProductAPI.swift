//
// ProductAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ProductAPI {

    /**
     Provided product search functionality
     
     - parameter collection: (query) Collection name 
     - parameter productId: (query) Product ID which need to be search 
     - parameter xGroupbyCustomerId: (header) Required. This parameter will extract from header X-Groupby-Customer-Id. May contain tenant name. Used to define a                           client by its name. 
     - parameter variantIds: (query) Not required. If the product has variant list and the request specifies the variantIds, requested variants will be the                           first in the response. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getByProductIds(collection: String, productId: String, xGroupbyCustomerId: String, variantIds: [String]? = nil, apiResponseQueue: DispatchQueue = GroupByRetailClientAPI.apiResponseQueue, completion: @escaping ((_ data: ProductDto?, _ error: Error?) -> Void)) -> RequestTask {
        return getByProductIdsWithRequestBuilder(collection: collection, productId: productId, xGroupbyCustomerId: xGroupbyCustomerId, variantIds: variantIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Provided product search functionality
     - GET /api/search/product
     - Perform a product search against the GroupBy Retail Search API.
     - BASIC:
       - type: http
       - name: GroupByIncEmployee
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: ClientKey
     - responseHeaders: [Content-Type(String), Date(String), Content-Length(String), Connection(String)]
     - parameter collection: (query) Collection name 
     - parameter productId: (query) Product ID which need to be search 
     - parameter xGroupbyCustomerId: (header) Required. This parameter will extract from header X-Groupby-Customer-Id. May contain tenant name. Used to define a                           client by its name. 
     - parameter variantIds: (query) Not required. If the product has variant list and the request specifies the variantIds, requested variants will be the                           first in the response. (optional)
     - returns: RequestBuilder<ProductDto> 
     */
    open class func getByProductIdsWithRequestBuilder(collection: String, productId: String, xGroupbyCustomerId: String, variantIds: [String]? = nil) -> RequestBuilder<ProductDto> {
        let localVariablePath = "/api/search/product"
        let localVariableURLString = GroupByRetailClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "collection": (wrappedValue: collection.encodeToJSON(), isExplode: true),
            "productId": (wrappedValue: productId.encodeToJSON(), isExplode: true),
            "variantIds": (wrappedValue: variantIds?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "X-Groupby-Customer-Id": xGroupbyCustomerId.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ProductDto>.Type = GroupByRetailClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
