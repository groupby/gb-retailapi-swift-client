//
// RecommendationsAPIAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class RecommendationsAPIAPI {

    /**
     Provide Recommendations AI functionality.
     
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter recommendationsRequest: (body) Request that should be populated to configure a recommendations API call made by the client. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    @discardableResult
    open class func predict(xGroupbyCustomerId: String, recommendationsRequest: RecommendationsRequest, apiResponseQueue: DispatchQueue = GroupByRetailClientAPI.apiResponseQueue, completion: @escaping ((_ data: PredictResults?, _ error: Error?) -> Void)) -> RequestTask {
        return predictWithRequestBuilder(xGroupbyCustomerId: xGroupbyCustomerId, recommendationsRequest: recommendationsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Provide Recommendations AI functionality.
     - POST /api/predict
     - Perform a recommendation request against the GroupBy Retail Recommendations API.
     - BASIC:
       - type: http
       - name: GroupByIncEmployee
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: ClientKey
     - responseHeaders: [Content-Type(String), Date(String), Content-Length(String), Connection(String)]
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter recommendationsRequest: (body) Request that should be populated to configure a recommendations API call made by the client. 
     - returns: RequestBuilder<PredictResults> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func predictWithRequestBuilder(xGroupbyCustomerId: String, recommendationsRequest: RecommendationsRequest) -> RequestBuilder<PredictResults> {
        let localVariablePath = "/api/predict"
        let localVariableURLString = GroupByRetailClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: recommendationsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "X-Groupby-Customer-Id": xGroupbyCustomerId.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PredictResults>.Type = GroupByRetailClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Provide Recommendations AI functionality.
     
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter recommendationsRequest: (body) Request that should be populated to configure a recommendations API call made by the client. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func predictV2(xGroupbyCustomerId: String, recommendationsRequest: RecommendationsRequest, apiResponseQueue: DispatchQueue = GroupByRetailClientAPI.apiResponseQueue, completion: @escaping ((_ data: PredictResults?, _ error: Error?) -> Void)) -> RequestTask {
        return predictV2WithRequestBuilder(xGroupbyCustomerId: xGroupbyCustomerId, recommendationsRequest: recommendationsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Provide Recommendations AI functionality.
     - POST /api/recommendation
     - Perform a recommendation request against the GroupBy Retail Recommendations API.
     - BASIC:
       - type: http
       - name: GroupByIncEmployee
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: ClientKey
     - responseHeaders: [Content-Type(String), Date(String), Content-Length(String), Connection(String)]
     - parameter xGroupbyCustomerId: (header) Custom HTTP header which may contain tenant name. Used to define a client by its name. 
     - parameter recommendationsRequest: (body) Request that should be populated to configure a recommendations API call made by the client. 
     - returns: RequestBuilder<PredictResults> 
     */
    open class func predictV2WithRequestBuilder(xGroupbyCustomerId: String, recommendationsRequest: RecommendationsRequest) -> RequestBuilder<PredictResults> {
        let localVariablePath = "/api/recommendation"
        let localVariableURLString = GroupByRetailClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: recommendationsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "X-Groupby-Customer-Id": xGroupbyCustomerId.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PredictResults>.Type = GroupByRetailClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
