//
// RecordDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Information regarding a product in the proprietary Group By API format. */
public struct RecordDto: Codable, JSONEncodable, Hashable {

    /** Identifier of the record as an MD5 hash. */
    public var id: String?
    /** Logical URL of the record. */
    public var u: String?
    /** Title of the record. */
    public var t: String?
    /** Collection the record was queried from or resides. */
    public var collection: String?
    /** All other metadata, read fields, the record has. */
    public var allMeta: [String: AnyCodable]?

    public init(id: String? = nil, u: String? = nil, t: String? = nil, collection: String? = nil, allMeta: [String: AnyCodable]? = nil) {
        self.id = id
        self.u = u
        self.t = t
        self.collection = collection
        self.allMeta = allMeta
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "_id"
        case u = "_u"
        case t = "_t"
        case collection
        case allMeta
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(u, forKey: .u)
        try container.encodeIfPresent(t, forKey: .t)
        try container.encodeIfPresent(collection, forKey: .collection)
        try container.encodeIfPresent(allMeta, forKey: .allMeta)
    }
}

