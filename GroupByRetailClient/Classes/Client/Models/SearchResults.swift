//
// SearchResults.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** SAYT response. Contains list of suggestions ad base response information. */
public struct SearchResults: Codable, JSONEncodable, Hashable {

    public var stats: SearchResultsStats?
    public var searchTerms: [SearchTerms]
    /** Map with extended attributes which are returned in autocomplete response.  */
    public var extendedAttributes: [String: [String]]?
    /** SAYT response attributes. Contains list of direct matching attributes. */
    public var attributeResults: [String: AttributeSuggestion]?
    /** SiteFilter object used with request. */
    public var siteFilter: String?

    public init(stats: SearchResultsStats? = nil, searchTerms: [SearchTerms], extendedAttributes: [String: [String]]? = nil, attributeResults: [String: AttributeSuggestion]? = nil, siteFilter: String? = nil) {
        self.stats = stats
        self.searchTerms = searchTerms
        self.extendedAttributes = extendedAttributes
        self.attributeResults = attributeResults
        self.siteFilter = siteFilter
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case stats
        case searchTerms
        case extendedAttributes
        case attributeResults
        case siteFilter
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(stats, forKey: .stats)
        try container.encode(searchTerms, forKey: .searchTerms)
        try container.encodeIfPresent(extendedAttributes, forKey: .extendedAttributes)
        try container.encodeIfPresent(attributeResults, forKey: .attributeResults)
        try container.encodeIfPresent(siteFilter, forKey: .siteFilter)
    }
}

