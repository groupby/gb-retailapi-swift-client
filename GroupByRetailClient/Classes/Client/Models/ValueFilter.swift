//
// ValueFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ValueFilter: Codable, JSONEncodable, Hashable {

    /** Field the value applies to. */
    public var field: String
    /** Value to filter on. */
    public var value: String
    /** Numeric value to filter on. */
    public var numberValue: Double
    /** Describing whether the filter is negated or not: color that is NOT red. */
    public var exclude: Bool
    /** Determine which field we need to use - value if 'TEXTUAL' type or numberValue if 'NUMERIC' type. */
    public var type: AnyCodable?

    public init(field: String, value: String, numberValue: Double, exclude: Bool, type: AnyCodable?) {
        self.field = field
        self.value = value
        self.numberValue = numberValue
        self.exclude = exclude
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case field
        case value
        case numberValue
        case exclude
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(field, forKey: .field)
        try container.encode(value, forKey: .value)
        try container.encode(numberValue, forKey: .numberValue)
        try container.encode(exclude, forKey: .exclude)
        try container.encode(type, forKey: .type)
    }
}

