//
// RuleVariant.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RuleVariant: Codable, JSONEncodable, Hashable {

    public var biasingProfileName: String
    public var includedNavigations: [String]
    public var template: RuleTemplate
    public var boostedProductBuckets: [BoostedProductBucket]
    public var pinnedRefinements: [PinnedRefinement]
    public var sort: Sort
    public var valueFilters: [ValueFilter]
    public var searchFilters: [SearchFilter]
    public var rangeFilters: [RangeFilter]

    public init(biasingProfileName: String, includedNavigations: [String], template: RuleTemplate, boostedProductBuckets: [BoostedProductBucket], pinnedRefinements: [PinnedRefinement], sort: Sort, valueFilters: [ValueFilter], searchFilters: [SearchFilter], rangeFilters: [RangeFilter]) {
        self.biasingProfileName = biasingProfileName
        self.includedNavigations = includedNavigations
        self.template = template
        self.boostedProductBuckets = boostedProductBuckets
        self.pinnedRefinements = pinnedRefinements
        self.sort = sort
        self.valueFilters = valueFilters
        self.searchFilters = searchFilters
        self.rangeFilters = rangeFilters
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case biasingProfileName
        case includedNavigations
        case template
        case boostedProductBuckets
        case pinnedRefinements
        case sort
        case valueFilters
        case searchFilters
        case rangeFilters
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(biasingProfileName, forKey: .biasingProfileName)
        try container.encode(includedNavigations, forKey: .includedNavigations)
        try container.encode(template, forKey: .template)
        try container.encode(boostedProductBuckets, forKey: .boostedProductBuckets)
        try container.encode(pinnedRefinements, forKey: .pinnedRefinements)
        try container.encode(sort, forKey: .sort)
        try container.encode(valueFilters, forKey: .valueFilters)
        try container.encode(searchFilters, forKey: .searchFilters)
        try container.encode(rangeFilters, forKey: .rangeFilters)
    }
}

