//
// ProductCustomAttribute.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A custom attribute that is not explicitly modeled in product. */
public struct ProductCustomAttribute: Codable, JSONEncodable, Hashable {

    /** The textual values of this custom attribute. At most 400 values are allowed. Empty values are not allowed. Length limit of 256 characters. Exactly one of text or numbers should be set. */
    public var text: [String]?
    /** The numerical values of this custom attribute. At most 400 values are allowed. Exactly one of text or numbers should be set. */
    public var numbers: [Double]?
    /** If true, custom attribute values are searchable by text queries in. search. Only set if type text set. */
    public var searchable: Bool?
    /** If true, custom attribute values are indexed, so that it can be filtered, faceted or boosted in search. */
    public var indexable: Bool?

    public init(text: [String]? = nil, numbers: [Double]? = nil, searchable: Bool? = nil, indexable: Bool? = nil) {
        self.text = text
        self.numbers = numbers
        self.searchable = searchable
        self.indexable = indexable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case text
        case numbers
        case searchable
        case indexable
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(text, forKey: .text)
        try container.encodeIfPresent(numbers, forKey: .numbers)
        try container.encodeIfPresent(searchable, forKey: .searchable)
        try container.encodeIfPresent(indexable, forKey: .indexable)
    }
}

