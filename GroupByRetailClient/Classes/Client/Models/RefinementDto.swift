//
// RefinementDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Refinement value or range in the navigation. */
public struct RefinementDto: Codable, JSONEncodable, Hashable {

    public var type: NavigationTypeDto
    /** Number of products which match this refinement value or range. */
    public var count: Int64?
    /** Value of the refinement. */
    public var value: String?
    /** Lower bound of the refinement range. */
    public var low: Double?
    /** Upper bound  of the refinement range. */
    public var high: Double?

    public init(type: NavigationTypeDto, count: Int64? = nil, value: String? = nil, low: Double? = nil, high: Double? = nil) {
        self.type = type
        self.count = count
        self.value = value
        self.low = low
        self.high = high
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case count
        case value
        case low
        case high
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(low, forKey: .low)
        try container.encodeIfPresent(high, forKey: .high)
    }
}

